// package main
package listCompare

func main()  {
	// list是对标slice的
	/* 
		①slice每次扩容都会先对之前的进行拷贝，再次分配空间，频繁扩容，就要频繁的开辟空间 
		②slice要求底层必须是连续的存储空间，如果底层没有这样的条件就会分配对应大小的slice
	*/

	/* 
		list的每个元素除了存储值外，还存储了指向下一个元素的指针 
		list每次增加一个元素就会申请一块空间，所以底层可以不连续

		优势：
		①空间可以不连续，所以分配能力比slice强
		②插入方便，删除很快
		劣势：
		①多存一个元素的指针，造成空间浪费
		②性能比slice低很多，查询很慢
	*/

	/* 
		
	*/
}